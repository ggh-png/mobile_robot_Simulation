<launch>
		<!-- Load robot description and start state publisher-->
<!--     <param name="robot_description" textfile="$(find gbot_core)/urdf/head_2d.urdf" /> -->

<!--     <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
		 -->
		<!-- Start RPLIDAR sensor node which provides LaserScan data  -->
<!--     <node name="hlds_laser_publisher" pkg="hls_lfcd_lds_driver" type="hlds_laser_publisher" output="screen">
        <param name="serial_port" type="string" value="/dev/ttyUSB0"/>
        <param name="serial_baudrate" type="int" value="115200"/>
        <param name="frame_id" type="string" value="laser"/>
        <param name="inverted" type="bool" value="false"/>
        <param name="angle_compensate" type="bool" value="true"/>
    </node>
		 -->
		<!-- Start Google Cartographer node with custom configuration file-->
	<include file = "$(find marvel_v1)/launch/marvel_v1_gazebo.launch"/>
    <node name="cartographer_node" pkg="cartographer_ros" type="cartographer_node" args="
          -configuration_directory
              $(find marvel_v1)/config
          -configuration_basename turtlebot3_lds_2d.lua" output="screen">
<!--               <remap from="/imu" to="/flat_imu"/> -->
    </node>

		<!-- Additional node which converts Cartographer map into ROS occupancy grid map. Not used and can be skipped in this case -->
    <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" type="cartographer_occupancy_grid_node" args="-resolution 0.05" />

<!--   <node pkg="turtlebot3_slam" type="flat_world_imu_node" name="flat_world_imu_node" output="screen">
    <remap from="imu_in" to="/imu" />
    <remap from="imu_out" to="/flat_imu" />
  </node> -->
    
</launch>
